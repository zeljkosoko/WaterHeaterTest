// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WaterHeaterTest.Models;

namespace WaterHeaterTest.Migrations
{
    [DbContext(typeof(PZIPPContext))]
    [Migration("20230208133441_VizuelnaIspravnost_modeli")]
    partial class VizuelnaIspravnost_modeli
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WaterHeaterTest.Models.AgrSifraKotaoSarzaKotao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<int>("IdKotao")
                        .HasColumnType("int");

                    b.Property<int>("IdSarza")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdKotao");

                    b.HasIndex("IdSarza");

                    b.ToTable("Agr_SifraKotao_SarzaKotao");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.AgrVrstaProblemaOpis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<int>("IdVrstaProblema")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Slika")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdVrstaProblema");

                    b.ToTable("Agr_VrstaProblema_Opis");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.Agr_Vizuelna_Greska_Opis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdVizuelnaGreska")
                        .HasColumnType("int");

                    b.Property<string>("Komentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Agr_Vizuelna_Greska_Opis");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.AktElektroispravnostBojler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKontrolisanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdKorisnikKontrolisao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTestResults")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AktElektroispravnostBojler");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.AktVodootpornostKotao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKontrolisanja")
                        .HasColumnType("datetime");

                    b.Property<string>("IdKorisnikKontrolisao")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int>("IdSerijskiBrojKotao")
                        .HasColumnType("int");

                    b.Property<int?>("IdVrstaProblemaOpis")
                        .HasColumnType("int");

                    b.Property<bool>("Ispravan")
                        .HasColumnType("bit")
                        .HasComment("0-neispravan, 1-ispravan");

                    b.HasKey("Id");

                    b.HasIndex("IdSerijskiBrojKotao");

                    b.HasIndex("IdVrstaProblemaOpis");

                    b.ToTable("Akt_Vodootpornost_Kotao");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.Akt_Vizuelna_Ispravnost_Bojler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKontrolisanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAgrVizuelnaGreskaOpis")
                        .HasColumnType("int");

                    b.Property<int>("IdKorisnikKontrolisao")
                        .HasColumnType("int");

                    b.Property<int>("IdSerijskiBrojBojler")
                        .HasColumnType("int");

                    b.Property<bool>("Ispravan")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Akt_Vizuelna_Ispravnost_Bojler");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.STEP_CR", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CHECKRMIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEVNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ERRCODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXMINUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXMINUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MYRESULT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRFAILED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRPASSED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RMAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RMIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RREAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RREALOL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPTITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TESTTIME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("STEP_CR");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.STEP_CT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CHECKIMAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEVNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ERRCODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IREAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXMINUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXMINUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MYRESULT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRFAILED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRPASSED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPTITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TESTTIME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("STEP_CT");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.STEP_FK", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CHECKU1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CHECKU2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CHECKU3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COSPHIMAX1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COSPHIMAX2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COSPHIMAX3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COSPHIMIN1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COSPHIMIN2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COSPHIMIN3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COSPHIREAL1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COSPHIREAL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COSPHIREAL3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEVNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ERRCODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GOODTIME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GOODTIMEOK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMAX1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMAX2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMAX3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMIN1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMIN2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMIN3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IREAL1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IREAL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IREAL3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KEEPPOWER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXMINUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXMINUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MYRESULT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRFAILED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRPASSED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PHASE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PMAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PMIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POWERREAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPTITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TESTTIME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UMAX1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UMAX2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UMAX3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UMIN1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UMIN2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UMIN3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UREAL1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UREAL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UREAL3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USECOSPHI1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USECOSPHI2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USECOSPHI3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USEPHASE1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USEPHASE2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USEPHASE3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("STEP_FK");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.STEP_H5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ARCMAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ARCREAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CONNECT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEVNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ERRCODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IREAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IRMAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IRMIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ITYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("METHOD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXMINUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXMINUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MYRESULT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRFAILED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRPASSED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMPDOWN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMPERR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMPTIME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPTITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TESTTIME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UNOM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UREAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USEDARC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USTART")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UTYPE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("STEP_H5");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.STEP_I5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CONNECT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEVNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ERRCODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IRMAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IRMIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXMINUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXMINUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MYRESULT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRFAILED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRPASSED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMPDOWN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMPERR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMPTIME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RMIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RREAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RREALOL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKMODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPTITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TESTTIME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UNOM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UREAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USTART")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("STEP_I5");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.STEP_L1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEVNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ERRCODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IREAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IREALMAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXMINUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXMINUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MYRESULT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRFAILED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRPASSED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PHASE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPTITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TESTTIME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UMODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UNOM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UREAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UTYPE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("STEP_L1");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.STEP_PW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEVNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ERRCODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FASTPW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IREAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("METHOD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXMINUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXMINUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MYRESULT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRFAILED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRPASSED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PWMSET")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RMAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RMIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RREAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STARTMODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPTITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TESTTIME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UDROPMAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UDROPREAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UMAX")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("STEP_PW");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.SifKotao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Sif_Kotao");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.SifSarzaKotao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<int>("NarucenaKolicina")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Sif_Sarza_Kotao");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.SifSerijskiBrojKotao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAgrSifraKotaoSarzaKotao")
                        .HasColumnName("IdAgr_SifraKotao_SarzaKotao")
                        .HasColumnType("int");

                    b.Property<string>("RedniBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("IdAgrSifraKotaoSarzaKotao");

                    b.ToTable("Sif_Serijski_Broj_Kotao");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.SifVrstaProblema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<string>("IdKorisnikKreirao")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Sif_Vrsta_Problema");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.Sif_Serijski_Broj_Bojler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sif_Serijski_Broj_Bojler");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.Sif_Vizuelna_Greska", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdKorisnikKreirao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tip")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sif_Vizuelna_Greska");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.TEST_RESULTS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("COMMENT1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COMMENT2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEVICENAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DEVICEVALUE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DEVNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENDDATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ERRCODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdAgr_ExtaStepStack")
                        .HasColumnType("int");

                    b.Property<int?>("IdSTEP_CR")
                        .HasColumnType("int");

                    b.Property<int?>("IdSTEP_CT")
                        .HasColumnType("int");

                    b.Property<int?>("IdSTEP_FK")
                        .HasColumnType("int");

                    b.Property<int?>("IdSTEP_H5")
                        .HasColumnType("int");

                    b.Property<int?>("IdSTEP_I5")
                        .HasColumnType("int");

                    b.Property<int?>("IdSTEP_L1")
                        .HasColumnType("int");

                    b.Property<int?>("IdSTEP_PW")
                        .HasColumnType("int");

                    b.Property<string>("MTXMINUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXMINUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTXPLUSSTR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MYRESULT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRFAILED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRPASSED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PRODUCTID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PROGRAMFILE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("REMARKNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("REMARKVALUE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SERIALNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STARTDATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STATIONID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPNR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STEPTITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("STEP_CRId")
                        .HasColumnType("int");

                    b.Property<int?>("STEP_CTId")
                        .HasColumnType("int");

                    b.Property<int?>("STEP_FKId")
                        .HasColumnType("int");

                    b.Property<int?>("STEP_H5Id")
                        .HasColumnType("int");

                    b.Property<int?>("STEP_I5Id")
                        .HasColumnType("int");

                    b.Property<int?>("STEP_L1Id")
                        .HasColumnType("int");

                    b.Property<int?>("STEP_PWId")
                        .HasColumnType("int");

                    b.Property<string>("TOTALRESULT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USERTESTER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WEEKNR")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("STEP_CRId");

                    b.HasIndex("STEP_CTId");

                    b.HasIndex("STEP_FKId");

                    b.HasIndex("STEP_H5Id");

                    b.HasIndex("STEP_I5Id");

                    b.HasIndex("STEP_L1Id");

                    b.HasIndex("STEP_PWId");

                    b.ToTable("TEST_RESULTS");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.AgrSifraKotaoSarzaKotao", b =>
                {
                    b.HasOne("WaterHeaterTest.Models.SifKotao", "IdKotaoNavigation")
                        .WithMany("AgrSifraKotaoSarzaKotao")
                        .HasForeignKey("IdKotao")
                        .HasConstraintName("FK_Agr_SifraKotao_SarzaKotao_Sif_Kotao")
                        .IsRequired();

                    b.HasOne("WaterHeaterTest.Models.SifSarzaKotao", "IdSarzaNavigation")
                        .WithMany("AgrSifraKotaoSarzaKotao")
                        .HasForeignKey("IdSarza")
                        .HasConstraintName("FK_Agr_SifraKotao_SarzaKotao_Sif_Sarza_Kotao")
                        .IsRequired();
                });

            modelBuilder.Entity("WaterHeaterTest.Models.AgrVrstaProblemaOpis", b =>
                {
                    b.HasOne("WaterHeaterTest.Models.SifVrstaProblema", "IdVrstaProblemaNavigation")
                        .WithMany("AgrVrstaProblemaOpis")
                        .HasForeignKey("IdVrstaProblema")
                        .HasConstraintName("FK_Agr_VrstaProblema_Opis_Sif_Vrsta_Problema")
                        .IsRequired();
                });

            modelBuilder.Entity("WaterHeaterTest.Models.AktVodootpornostKotao", b =>
                {
                    b.HasOne("WaterHeaterTest.Models.SifSerijskiBrojKotao", "IdSerijskiBrojKotaoNavigation")
                        .WithMany("AktVodootpornostKotao")
                        .HasForeignKey("IdSerijskiBrojKotao")
                        .HasConstraintName("FK_Akt_Vodootpornost_Kotao_Sif_Serijski_Broj_Kotao")
                        .IsRequired();

                    b.HasOne("WaterHeaterTest.Models.AgrVrstaProblemaOpis", "IdVrstaProblemaOpisNavigation")
                        .WithMany("AktVodootpornostKotao")
                        .HasForeignKey("IdVrstaProblemaOpis")
                        .HasConstraintName("FK_Akt_Vodootpornost_Kotao_Agr_VrstaProblema_Opis");
                });

            modelBuilder.Entity("WaterHeaterTest.Models.SifSerijskiBrojKotao", b =>
                {
                    b.HasOne("WaterHeaterTest.Models.AgrSifraKotaoSarzaKotao", "IdAgrSifraKotaoSarzaKotaoNavigation")
                        .WithMany("SifSerijskiBrojKotao")
                        .HasForeignKey("IdAgrSifraKotaoSarzaKotao")
                        .HasConstraintName("FK_Sif_Serijski_Broj_Kotao_Agr_SifraKotao_SarzaKotao")
                        .IsRequired();
                });

            modelBuilder.Entity("WaterHeaterTest.Models.TEST_RESULTS", b =>
                {
                    b.HasOne("WaterHeaterTest.Models.STEP_CR", "STEP_CR")
                        .WithMany()
                        .HasForeignKey("STEP_CRId");

                    b.HasOne("WaterHeaterTest.Models.STEP_CT", "STEP_CT")
                        .WithMany()
                        .HasForeignKey("STEP_CTId");

                    b.HasOne("WaterHeaterTest.Models.STEP_FK", "STEP_FK")
                        .WithMany()
                        .HasForeignKey("STEP_FKId");

                    b.HasOne("WaterHeaterTest.Models.STEP_H5", "STEP_H5")
                        .WithMany()
                        .HasForeignKey("STEP_H5Id");

                    b.HasOne("WaterHeaterTest.Models.STEP_I5", "STEP_I5")
                        .WithMany()
                        .HasForeignKey("STEP_I5Id");

                    b.HasOne("WaterHeaterTest.Models.STEP_L1", "STEP_L1")
                        .WithMany()
                        .HasForeignKey("STEP_L1Id");

                    b.HasOne("WaterHeaterTest.Models.STEP_PW", "STEP_PW")
                        .WithMany()
                        .HasForeignKey("STEP_PWId");
                });
#pragma warning restore 612, 618
        }
    }
}
