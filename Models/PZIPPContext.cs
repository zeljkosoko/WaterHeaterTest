// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace WaterHeaterTest.Models
{
    public partial class PZIPPContext : DbContext
    {
        public PZIPPContext()
        {
        }

        public PZIPPContext(DbContextOptions<PZIPPContext> options)
            : base(options)
        {
        }

        #region DB First - Vodootpornost 
        public virtual DbSet<AgrSifraKotaoSarzaKotao> AgrSifraKotaoSarzaKotao { get; set; }
        public virtual DbSet<AgrVrstaProblemaOpis> AgrVrstaProblemaOpis { get; set; }
        public virtual DbSet<AktVodootpornostKotao> AktVodootpornostKotao { get; set; }
        public virtual DbSet<SifArtikal> SifArtikal { get; set; }
        public virtual DbSet<SifKotao> SifKotao { get; set; }
        public virtual DbSet<SifSarzaKotao> SifSarzaKotao { get; set; }
        public virtual DbSet<SifSerijskiBrojKotao> SifSerijskiBrojKotao { get; set; }
        public virtual DbSet<SifVrstaProblema> SifVrstaProblema { get; set; }
        #endregion

        #region CodeFirst - ElektroTest
        public DbSet<STEP_CR> STEP_CR { get; set; }
        public DbSet<STEP_CT> STEP_CT { get; set; }
        public DbSet<STEP_FK> STEP_FK { get; set; }
        public DbSet<STEP_H5> STEP_H5 { get; set; }
        public DbSet<STEP_I5> STEP_I5 { get; set; }
        public DbSet<STEP_L1> STEP_L1 { get; set; }
        public DbSet<STEP_PW> STEP_PW { get; set; }
        public DbSet<TEST_RESULTS> TEST_RESULTS { get; set; }
        public DbSet<Sif_Serijski_Broj_Bojler> Sif_Serijski_Broj_Bojler { get; set; }
        public DbSet<AktElektroispravnostBojler> AktElektroispravnostBojler { get; set; }
        public DbSet<SifElektropult> SifElektropult { get; set; }
        public DbSet<Agr_AktElektroispravnostBojler_SifElektropult> Agr_AktElektroispravnostBojler_SifElektropult { get; set; }
        #endregion

        #region CodeFirst - Vizuelni test
        public DbSet<Sif_Vizuelna_Greska> Sif_Vizuelna_Greska { get; set; }
        public DbSet<Agr_Vizuelna_Greska_Opis> Agr_Vizuelna_Greska_Opis { get; set; }
        public DbSet<Akt_Vizuelna_Ispravnost_Bojler> Akt_Vizuelna_Ispravnost_Bojler { get; set; }
        #endregion
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AgrSifraKotaoSarzaKotao>(entity =>
            {
                entity.ToTable("Agr_SifraKotao_SarzaKotao");

                entity.Property(e => e.DatumKreiranja).HasColumnType("datetime");

                entity.HasOne(d => d.IdKotaoNavigation)
                    .WithMany(p => p.AgrSifraKotaoSarzaKotao)
                    .HasForeignKey(d => d.IdKotao)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Agr_SifraKotao_SarzaKotao_Sif_Kotao");

                entity.HasOne(d => d.IdSarzaNavigation)
                    .WithMany(p => p.AgrSifraKotaoSarzaKotao)
                    .HasForeignKey(d => d.IdSarza)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Agr_SifraKotao_SarzaKotao_Sif_Sarza_Kotao");
            });

            modelBuilder.Entity<AgrVrstaProblemaOpis>(entity =>
            {
                entity.ToTable("Agr_VrstaProblema_Opis");

                entity.Property(e => e.DatumKreiranja).HasColumnType("datetime");

                entity.Property(e => e.Opis).HasMaxLength(100);

                entity.Property(e => e.Slika).IsUnicode(false);

                entity.HasOne(d => d.IdVrstaProblemaNavigation)
                    .WithMany(p => p.AgrVrstaProblemaOpis)
                    .HasForeignKey(d => d.IdVrstaProblema)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Agr_VrstaProblema_Opis_Sif_Vrsta_Problema");
            });

            modelBuilder.Entity<AktVodootpornostKotao>(entity =>
            {
                entity.ToTable("Akt_Vodootpornost_Kotao");

                entity.Property(e => e.DatumKontrolisanja).HasColumnType("datetime");

                entity.Property(e => e.IdKorisnikKontrolisao)
                    .IsRequired()
                    .HasMaxLength(450);

                entity.Property(e => e.Ispravan).HasComment("0-neispravan, 1-ispravan");

                entity.HasOne(d => d.IdSerijskiBrojKotaoNavigation)
                    .WithMany(p => p.AktVodootpornostKotao)
                    .HasForeignKey(d => d.IdSerijskiBrojKotao)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Akt_Vodootpornost_Kotao_Sif_Serijski_Broj_Kotao");

                entity.HasOne(d => d.IdVrstaProblemaOpisNavigation)
                    .WithMany(p => p.AktVodootpornostKotao)
                    .HasForeignKey(d => d.IdVrstaProblemaOpis)
                    .HasConstraintName("FK_Akt_Vodootpornost_Kotao_Agr_VrstaProblema_Opis");
            });

            modelBuilder.Entity<SifArtikal>(entity =>
            {
                entity.ToTable("Sif_Artikal");

                entity.Property(e => e.DatumKreiran).HasColumnType("datetime");

                entity.Property(e => e.IdPc).HasColumnName("IdPC");

                entity.Property(e => e.Naziv)
                    .IsRequired()
                    .HasMaxLength(225);

                entity.Property(e => e.Sifra)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SifKotao>(entity =>
            {
                entity.ToTable("Sif_Kotao");

                entity.Property(e => e.DatumKreiranja).HasColumnType("datetime");

                entity.Property(e => e.Naziv)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<SifSarzaKotao>(entity =>
            {
                entity.ToTable("Sif_Sarza_Kotao");

                entity.Property(e => e.DatumKreiranja).HasColumnType("datetime");

                entity.Property(e => e.Naziv)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<SifSerijskiBrojKotao>(entity =>
            {
                entity.ToTable("Sif_Serijski_Broj_Kotao");

                entity.Property(e => e.DatumKreiranja).HasColumnType("datetime");

                entity.Property(e => e.IdAgrSifraKotaoSarzaKotao).HasColumnName("IdAgr_SifraKotao_SarzaKotao");

                entity.Property(e => e.RedniBroj)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.HasOne(d => d.IdAgrSifraKotaoSarzaKotaoNavigation)
                    .WithMany(p => p.SifSerijskiBrojKotao)
                    .HasForeignKey(d => d.IdAgrSifraKotaoSarzaKotao)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Sif_Serijski_Broj_Kotao_Agr_SifraKotao_SarzaKotao");
            });

            modelBuilder.Entity<SifVrstaProblema>(entity =>
            {
                entity.ToTable("Sif_Vrsta_Problema");

                entity.Property(e => e.DatumKreiranja).HasColumnType("datetime");

                entity.Property(e => e.IdKorisnikKreirao)
                    .IsRequired()
                    .HasMaxLength(450);

                entity.Property(e => e.Naziv)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}